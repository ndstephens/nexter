html {
  box-sizing: border-box;
  font-size: 62.5%; }

body {
  font-family: "Nunito", sans-serif;
  color: #6d5d4b;
  font-weight: 300;
  line-height: 1.6; }

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

.container {
  display: grid;
  /*//* the default for each row, if not explicitly given, is "auto".  "min-content" is pretty much the same as "auto".  the Story Section uses 40vw so that its height is always in relation (aspect ratio) to the screen width. */
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  /*//* want the center 8-col-grid to be fixed width while the screen width changes size.  the two side '1fr's will respond while the center 8 (holding the content of the '.features' and '.homes' sections) stays fixed.  having the '1fr' cols on the sides allow full-bleed sections to expand wider, and be be fully responsive with changing screen width. */
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; }

/*//?----------  BUTTONS  ----------*/
.btn {
  background-color: #c69963;
  color: #fff;
  border: none;
  border-radius: 0;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  transition: background-color 0.2s; }
  .btn:hover {
    background-color: #b28451; }

/*//?----------  UTILITIES  ----------*/
/*//* don't always want to hard-code margin into certain CSS declarations since that margin may not be wanted in all instances of that class (such as with headings) */
/*//* this is primary only with reusable elements/classes, not usually those referenced with the BEM naming system, since those are very specific and therefore often can have specific margin properties */
.mb-sm {
  margin-bottom: 2rem; }

.mb-md {
  margin-bottom: 3rem; }

.mb-lg {
  margin-bottom: 4rem; }

.mb-xlg {
  margin-bottom: 8rem; }

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400; }

.heading-2 {
  font-size: 4rem;
  font-style: italic;
  line-height: 1; }
  .heading-2--light {
    color: #f9f7f6; }
  .heading-2--dark {
    color: #54483a; }

.heading-3 {
  font-size: 1.6rem;
  color: #c69963;
  text-transform: uppercase; }

.heading-4 {
  font-size: 1.9rem; }
  .heading-4--light {
    color: #f9f7f6; }
  .heading-4--dark {
    color: #54483a; }

.sidebar {
  background-color: #c69963;
  grid-column: sidebar-start / sidebar-end;
  grid-row: 1 / -1; }

.header {
  background-color: #54483a;
  grid-column: full-start / col-end 6; }

.realtors {
  background-color: #101d2c;
  grid-column: col-start 7 / full-end; }

/*//?----------  SECTION LAYOUT  ----------*/
.features {
  grid-column: center-start / center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 6rem;
  /*//* some of the '.feature' children components have less text in than others.  since the default is 'stretch' they have a different spacing in them than the others.  set to 'start' so they all bring their content to the top */
  align-items: start; }

/*//?----------  COMPONENTS  ----------*/
.feature {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem; }
  .feature__icon {
    fill: #c69963;
    width: 4.5rem;
    height: 4.5rem;
    /*//* not using '-1' (but instead 'span 2') b/c '-1' only works for referencing the end of the EXPLICIT grid.  since i didn't make any explicit rows, the '-1' won't use the last implicit row.  therefore need to use 'span 2' */
    /*//* also, by having the icon span down a row which therefore pushes the 'feature__text' element into the second column (instead of explicitly placing the paragraph into the second column) the height of the first row references the h4, not the icon, since the icon can span down */
    grid-row: 1 / span 2;
    transform: translateY(-1rem); }
  .feature__text {
    font-size: 1.7rem; }

.story__pictures {
  background-color: #c69963;
  grid-column: full-start / col-end 4;
  background-image: linear-gradient(rgba(198, 153, 99, 0.5), rgba(198, 153, 99, 0.5)), url("../img/back.jpg");
  display: grid;
  /*//* make a 6x6 grid to help layout the images */
  grid-template-rows: repeat(6, 1fr);
  grid-template-columns: repeat(6, 1fr);
  align-items: center; }

.story__img--1 {
  width: 100%;
  grid-row: 2 / -2;
  grid-column: 2 / -2;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.2); }

.story__img--2 {
  width: 115%;
  grid-row: 4 / -2;
  grid-column: 4 / -1;
  /*//* at first it looked like the enlarged photo wasn't overflowing the grid, but in fact it was and instead was being blocked by the '.story__content' section to its right.  a higher z-index made it visible */
  z-index: 10;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.3); }

.story__content {
  background-color: #f9f7f6;
  grid-column: col-start 5 / full-end;
  /*//* using a 'vw' sizing unit for the padding allows it to be responsive with the screen size, similar to percentages */
  padding: 6rem 8vw;
  /*//* in this case Flexbox can also be used for achieving the vertical centering of the content with left justification */
  display: grid;
  /*//* 'align-CONTENT' references the row tracks/cells themselves */
  align-content: center;
  /*//* 'justify-ITEMS' references the content within those tracks/cells */
  justify-items: start; }

.story__text {
  font-size: 1.5rem;
  font-style: italic;
  margin-bottom: 4rem; }

.homes {
  grid-column: center-start / center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 7rem; }

.home {
  background-color: #f9f7f6;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 3.5rem; }
  .home__img {
    width: 100%;
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    z-index: 1; }
  .home__like {
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    fill: #c69963;
    height: 2.5rem;
    width: 2.5rem;
    z-index: 2;
    justify-self: end;
    margin: 1rem; }
  .home__name {
    grid-column: 1 / -1;
    grid-row: 1 / 2;
    z-index: 3;
    width: 80%;
    justify-self: center;
    align-self: end;
    transform: translateY(50%);
    font-family: "Josefin Sans", sans-serif;
    font-size: 1.6rem;
    font-weight: 400;
    text-align: center;
    padding: 1.25rem;
    background-color: #101d2c;
    color: #fff; }
  .home__location, .home__rooms {
    margin-top: 2.5rem; }
  .home__location, .home__rooms, .home__area, .home__price {
    font-size: 1.5rem;
    margin-left: 2rem;
    display: flex;
    align-items: center; }
    .home__location svg, .home__rooms svg, .home__area svg, .home__price svg {
      fill: #c69963;
      height: 2rem;
      width: 2rem;
      margin-right: 1rem; }
  .home__btn {
    grid-column: 1 / -1; }

.gallery {
  background-color: #54483a;
  grid-column: full-start / full-end; }

.footer {
  background-color: #101d2c;
  grid-column: full-start / full-end; }
