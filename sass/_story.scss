.story {
  &__pictures {
    background-color: $color-primary;
    grid-column: full-start / col-end 4;

    background-image: linear-gradient(rgba($color-primary, 0.5), rgba($color-primary, 0.5)), url("../img/back.jpg");

    display: grid;
    /*//* make a 6x6 grid to help layout the images */
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);
    align-items: center;
  }

  &__img--1 {
    width: 100%;
    grid-row: 2 / -2;
    grid-column: 2 / -2;
    box-shadow: 0 2rem 5rem rgba($color: #000000, $alpha: 0.2);
  }
  &__img--2 {
    width: 115%;
    grid-row: 4 / -2;
    grid-column: 4 / -1;
    /*//* at first it looked like the enlarged photo wasn't overflowing the grid, but in fact it was and instead was being blocked by the '.story__content' section to its right.  a higher z-index made it visible */
    z-index: 10;
    box-shadow: 0 2rem 5rem rgba($color: #000000, $alpha: 0.3);
  }

  &__content {
    background-color: $color-grey-light-1;
    grid-column: col-start 5 / full-end;

    /*//* using a 'vw' sizing unit for the padding allows it to be responsive with the screen size, similar to percentages */
    padding: 6rem 8vw;

    /*//* in this case Flexbox can also be used for achieving the vertical centering of the content with left justification */
    // display: flex;
    // flex-direction: column;
    // justify-content: center;
    // align-items: flex-start;

    display: grid;
    /*//* 'align-CONTENT' references the row tracks/cells themselves */
    align-content: center;
    /*//* 'justify-ITEMS' references the content within those tracks/cells */
    justify-items: start;
  }

  &__text {
    font-size: 1.5rem;
    font-style: italic;
    margin-bottom: 4rem;
  }
}
